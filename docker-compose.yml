version: '3.8'
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: 'task'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - my-db:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/task
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8180
      KC_HOSTNAME_STRICT: "false"
      KC_PROXY: edge
      KC_SPI_CORS_ENABLED: "true"
      KC_SPI_CORS_ALLOW_ORIGINS: "http://localhost:3000"
      KC_SPI_CONNECTIONS_HTTP_DEFAULT_ALLOW_CREDENTIALS: "true"
      KC_SPI_CONNECTIONS_HTTP_DEFAULT_ALLOWED_ORIGINS: "http://localhost:3000"
      KC_SPI_CONNECTIONS_HTTP_DEFAULT_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      KC_SPI_CONNECTIONS_HTTP_DEFAULT_ALLOWED_HEADERS: "Authorization,Content-Type,Accept,Origin,X-Requested-With"
      KC_SPI_CONNECTIONS_HTTP_DEFAULT_EXPOSED_HEADERS: "Authorization,Content-Type"
    command: [
      "start-dev",
      "--http-enabled=true",
      "--hostname-strict=false",
      "--proxy=edge"
    ]
    ports:
      - "8180:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend
    volumes:
      - keycloak_data:/opt/keycloak/data/

volumes:
  keycloak_data:
  my-db:
    driver: local

networks:
  backend:
    driver: bridge
